1. declare
--variable declaration
message varchar2(20):='Hello, World!';
begin
/*
*pl/sql executable statement(s)
*/
dbms_output.put_line(message);
end;
/


2. declare 
a integer := 10;
b integer := 20;
c integer;
f real;
begin
c:= a+b;
dbms_output.put_line('Value of c:' || c);
f := 70.0/3.0;
dbms_output.put_line('Value of f:' || f);
end;
/



3.  declare 
message varchar2(50) := 'This is Moly';
x integer := 70;
y integer := 60;

begin
dbms_output.put_line(message);
dbms_output.put_line('This is the new programing language');

dbms_output.put_line(x+y);
dbms_output.put_line(x-y);
dbms_output.put_line(x*y);
dbms_output.put_line(x/y);
end;

4. begin
dbms_output.put_line('Outer variable num1:' || num1);
dbms_output.put_line('Outer variable num2:' || num2);
  declare

  num1 number := 195;
  num2 number := 185;

  begin
  dbms_output.put_line('Inner variable num1:' || num1);
  dbms_output.put_line('Inner variable num2:' || num2);

  end;
end;

5.  create table customers(id int not null, name varchar(20) not null, age int not null, address char(25), salary decimal(18,2), primary key(ID));

declare
 c_id customers.id%type :=1;
 c_name customers.name%type;
 c_addr customers.address%type;
 c_sal customers.salary%type;

begin
select name, address, salary into c_name, c_addr, c_sal from customers where id = c_id;
dbms_output.put_line('Customer ' ||c_name || ' from ' || c_addr || ' earns ' || c_sal);

declare
 d_id customers.id%type :=2;
 d_name customers.name%type;
 d_addr customers.address%type;
 d_sal customers.salary%type;

begin
select name, address, salary into d_name, d_addr, d_sal from customers where id = d_id;
dbms_output.put_line('Customer ' ||d_name || ' from ' || d_addr || ' earns ' || d_sal);

declare
 e_id customers.id%type :=3;
 e_name customers.name%type;
 e_addr customers.address%type;
 e_sal customers.salary%type;

begin
select name, address, salary into e_name, e_addr, e_sal from customers where id = e_id;
dbms_output.put_line('Customer ' ||e_name || ' from ' || e_addr || ' earns ' || e_sal);

end;



end;

end;
insert into customers (id, name, age, address, salary) values(3, 'Boni', 30, 'Mirpur', 5000.00);


6.  declare 
 subtype name is char(20);
 subtype message is varchar2(100);
 salutation name;
 greetings message;

begin 
 salutation := 'reder';
 greetings := 'Welcome to the world of pl/sql';
 dbms_output.put_line('Hello ' || salutation || greetings);
end;

 7.  declare
a number (2) :=21;
b number (2) :=10;
 begin
if(a = b) then
dbms_output.put_line('line 1 - a is equal to b');
else
dbms_output.put_line('line 1 - a is not equal to b');
end if;

if(a < b) then
dbms_output.put_line('line 2 - a is less then b');
else
dbms_output.put_line('line 2 - a is not less then b');
end if;

if(a > b) then
dbms_output.put_line('line 3 - a is greater then b');
else
dbms_output.put_line('line 3 - a is not greater then b');
end if;

a := 5;
b := 20;

if(a <= b) then
dbms_output.put_line('line 4 - a either equal or less then b');
end if;

if(b >= a) then
dbms_output.put_line('line 5 - b is either equal or greater then a');
end if;

if(a <> b) then
dbms_output.put_line('line 6 - a is not equal to b');
else
dbms_output.put_line('line 6 - a is equal to b');
end if;
end;


8.   declare 
x number(2) := 10;
begin
if (x between 5 and 20)then
dbms_output.put_line('True');
else 
dbms_output.put_line('False');
end if;


if (x between 5 and 10)then
dbms_output.put_line('True');
else 
dbms_output.put_line('False');
end if;


if (x between 11 and 20)then
dbms_output.put_line('True');
else 
dbms_output.put_line('False');
end if;

end;


9.         declare
procedure compare (value varchar2, pattern varchar2)is
begin
if value like pattern then
dbms_output.put_line ('True');
else
dbms_output.put_line ('false');
end if;
end;
begin
compare('Zara Ali', 'Z%A_i');
compare('Nuha Ali', 'N%A_i');
end;


10.      declare 
letter varchar2(1) :='m';

begin
if (letter in ('a', 'b', 'c'))then
dbms_output.put_line('True');
else
dbms_output.put_line('False');
end if;


if (letter in ('m', 'n', 'o'))then
dbms_output.put_line('True');
else
dbms_output.put_line('False');
end if;


if (letter is null)then
dbms_output.put_line('True');
else
dbms_output.put_line('False');
end if;

end;

11.         declare
a boolean := true; 
b boolean := false;

begin
 if (a and b) then
dbms_output.put_line('Line 1 - Condition is true');
end if; 


if (a or b) then
dbms_output.put_line('Line 2 - Condition is true');
end if; 

if ( not a) then
dbms_output.put_line('Line 3 - a is not true');
else
dbms_output.put_line('Line 3 - a is true');
end if;

if ( not b) then
dbms_output.put_line('Line 4 - b is not true');
else
dbms_output.put_line('Line 4 - b is true');
end if;

end ; 


12.         declare 
a number (2) := 20;
b number (2) := 10;
c number (2) := 15;
d number (2) := 5;
e number (2) ;

begin 

e := (a+b)* c/d;
dbms_output.put_line('Value of (a+b)*c/d is :' || e);

e := ((a+b)* c)/d;
dbms_output.put_line('Value of ((a+b)*c)/d is :' || e);

e := (a+b)* (c/d);
dbms_output.put_line('Value of (a+b)* (c/d)is :' || e);

e := a+(b*c)/d;
dbms_output.put_line('Value of  a+(b*c)/d is :' || e);

end;


13.    declare 
a number (2) :=10;
begin 
a := 10;
if ( a< 20)then 
dbms_output.put_line('a is less than 20');
end if;
dbms_output.put_line('value of a is:' || a);
end;


14.   declare

c_id customers.id%type :=1;
c_sal customers.salary%type;

begin

select salary
into c_sal 
from customers
where id = c_id;
if (c_sal <= 2000)then
update customers
set salary = salary + 1000
where id = c_id;
dbms_output.put_line ('salary update');
end if;
end;


15.   declare
a number (3) := 100;
begin 
if(a = 10)then
dbms_output.put_line('Value of a is 10');
elsif(a=20)then
dbms_output.put_line('Value of a is 20');
elsif(a=30)then
dbms_output.put_line('Value of a is 30');
else 
dbms_output.put_line('None of the values is matching');
end if;

dbms_output.put_line('Exact value of a  is:' || a);
end;


16.     declare
grade char(1) := 'A';
begin
case grade
when 'A' then dbms_output.put_line ('Excellent');
when 'B' then dbms_output.put_line ('Very good');
when 'C' then dbms_output.put_line ('Well done');
when 'D' then dbms_output.put_line ('You passed');
when 'F' then dbms_output.put_line ('Better try again');
else dbms_output.put_line ('No such grade');
end case;
end;


17.   declare
grade char(1) := 'B';
begin
case
when grade ='A' then dbms_output.put_line ('Excellent');
when grade ='B' then dbms_output.put_line ('Very good');
when grade ='C' then dbms_output.put_line ('Well done');
when grade ='D' then dbms_output.put_line ('You passed');
when grade ='F' then dbms_output.put_line ('Better try again');
else dbms_output.put_line ('No such grade');
end case;
end;


18.   declare
a number(3) :=100;
b number(3) :=200;
 begin
if(a=100)then
if(b=200)then
dbms_output.put_line('Value of a is  100 and b is 200');
end if;
end if;
dbms_output.put_line('exact value of a is : ' || a);
dbms_output.put_line('exact value of b is : ' || b);
end;





